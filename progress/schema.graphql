directive @cost(complexity: Int, multipliers: [String!]) on FIELD_DEFINITION

type User {
  id: ID!
  email: String!
}

type CartItem {
  amount: Int
  product: Product
}

type Product {
  id: ID!
  name: String
}

type LoginPayload {
  token: String
  user: User
}

type CreateProductPayload {
  product: Product
}

input LoginInput {
  email: String!
  password: String!
}

input CreateProductImageInput {
  url: String!
  description: String!
}

input CreateProductInput {
  name: String!
  description: String
  image: CreateProductImageInput
}

input AddProductToCartInput {
  productId: ID!
  amount: Int!
}

type AddProductToCartPayload {
  amount: Int
}

type Query {
  products(limit: Int): [Product]
}

type Mutation {
  createProduct(input: CreateProductInput!): CreateProductPayload
  login(input: LoginInput!): LoginPayload
  addProductToCart(input: AddProductToCartInput!): AddProductToCartPayload
}
